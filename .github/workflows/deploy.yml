name: Deploy to Cloudways

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H "$HOST" >> ~/.ssh/known_hosts
        env:
          HOST: ${{ secrets.CLOUDWAYS_SSH_HOST }}

      - name: Deploy via SSH key (if provided)
        if: ${{ secrets.CLOUDWAYS_SSH_KEY != '' }}
        run: |
          eval "$(ssh-agent -s)"
          ssh-add - <<< "${{ secrets.CLOUDWAYS_SSH_KEY }}"
          rsync -az --delete -e "ssh -o StrictHostKeyChecking=no" ./ ${{ secrets.CLOUDWAYS_SSH_USER }}@${{ secrets.CLOUDWAYS_SSH_HOST }}:${{ secrets.CLOUDWAYS_APP_DIR }}/

      - name: Deploy via password (fallback)
        if: ${{ secrets.CLOUDWAYS_SSH_KEY == '' && secrets.CLOUDWAYS_SSH_PASS != '' }}
        run: |
          sudo apt-get update -y
          sudo apt-get install -y sshpass rsync
          sshpass -p "${{ secrets.CLOUDWAYS_SSH_PASS }}" rsync -az --delete -e "ssh -o StrictHostKeyChecking=no" ./ ${{ secrets.CLOUDWAYS_SSH_USER }}@${{ secrets.CLOUDWAYS_SSH_HOST }}:${{ secrets.CLOUDWAYS_APP_DIR }}/

      - name: Remote bootstrap and deploy
        run: |
          if [ -n "${{ secrets.CLOUDWAYS_SSH_KEY }}" ]; then
            eval "$(ssh-agent -s)"; ssh-add - <<< "${{ secrets.CLOUDWAYS_SSH_KEY }}"
            ssh -o StrictHostKeyChecking=no ${{ secrets.CLOUDWAYS_SSH_USER }}@${{ secrets.CLOUDWAYS_SSH_HOST }} APP_DIR='${{ secrets.CLOUDWAYS_APP_DIR }}' SERVER_ENV='${{ secrets.SERVER_ENV }}' 'bash -s' < ci-bootstrap/deploy.sh
          elif [ -n "${{ secrets.CLOUDWAYS_SSH_PASS }}" ]; then
            sudo apt-get update -y && sudo apt-get install -y sshpass
            sshpass -p "${{ secrets.CLOUDWAYS_SSH_PASS }}" ssh -o StrictHostKeyChecking=no ${{ secrets.CLOUDWAYS_SSH_USER }}@${{ secrets.CLOUDWAYS_SSH_HOST }} APP_DIR='${{ secrets.CLOUDWAYS_APP_DIR }}' SERVER_ENV='${{ secrets.SERVER_ENV }}' 'bash -s' < ci-bootstrap/deploy.sh
          else
            echo "No SSH credentials provided; skipping remote deploy step." && exit 0
          fi

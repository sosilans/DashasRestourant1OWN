name: Deploy to Cloudways

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Deploy to Cloudways
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.CLOUDWAYS_SSH_HOST }}
        username: ${{ secrets.CLOUDWAYS_SSH_USER }}
        password: ${{ secrets.CLOUDWAYS_SSH_PASS }}
        port: 22
        script: |
          echo "=== DEPLOYMENT DEBUG INFO ==="
          echo "Current user: $(whoami)"
          echo "Current directory: $(pwd)"
          echo "Home directory: $HOME"
          echo "Available space: $(df -h . | tail -1)"
          
          cd ~/applications/ygrswjnpmw
          echo "App directory: $(pwd)"
          echo "Directory contents before:"
          ls -la
          
          # If repository doesn't exist, clone it
          if [ ! -d ".git" ]; then
            echo "Repository not found, cloning..."
            # Create a separate directory for our code
            mkdir -p website_code
            cd website_code
            git clone https://github.com/sosilans/NEWDariasItalianKitchen4.git .
            cd ..
          else
            echo "Repository exists, pulling latest changes..."
            cd website_code
            git pull origin main || git pull origin master
            cd ..
          fi
          
          echo "Directory contents after git:"
          ls -la
          
          # Make sure we have the deployment script
          if [ -f "website_code/ci-bootstrap/deploy.sh" ]; then
            chmod +x website_code/ci-bootstrap/deploy.sh
            cd website_code
            ./ci-bootstrap/deploy.sh
            cd ..
          else
            echo "Deploy script not found, deploying React build directly..."
            
            # Build React app if needed
            if [ -d "website_code/assets/design" ]; then
              cd website_code/assets/design
              npm install
              npm run build
              cd ../../..
              
              # Copy build files to public_html
              if [ -d "website_code/assets/design/build" ]; then
                echo "Copying React build to public_html..."
                
                # Clear public_html first
                rm -rf public_html/*
                
                # Copy all build files
                cp -r website_code/assets/design/build/* public_html/
                
                # Set proper permissions
                chmod -R 755 public_html/
                find public_html/ -type f -name "*.html" -exec chmod 644 {} \;
                find public_html/ -type f -name "*.css" -exec chmod 644 {} \;
                find public_html/ -type f -name "*.js" -exec chmod 644 {} \;
                find public_html/ -type f -name "*.png" -exec chmod 644 {} \;
                
                # List files to verify
                echo "=== FILES IN PUBLIC_HTML ==="
                ls -la public_html/
                echo "=== INDEX.HTML CONTENT ==="
                head -20 public_html/index.html || echo "No index.html found"
                echo "=== PUBLIC_HTML PERMISSIONS ==="
                ls -la public_html/
                
                echo "React app deployed successfully!"
              else
                echo "Build failed - no build directory found"
              fi
            else
              echo "No React project found"
            fi
          fi

    - name: Verify deployment
      run: |
        echo "Deployment completed. Checking site status..."
        sleep 30
        curl -f https://phpstack-1511050-5820602.cloudwaysapps.com/ || echo "Site may still be deploying..."

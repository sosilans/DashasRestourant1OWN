name: Deploy to Cloudways

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      SSH_HOST: ${{ secrets.CLOUDWAYS_SSH_HOST }}
      SSH_USER: ${{ secrets.CLOUDWAYS_SSH_USER }}
      SSH_PASS: ${{ secrets.CLOUDWAYS_SSH_PASS }}
      SSH_KEY:  ${{ secrets.CLOUDWAYS_SSH_KEY }}
      APP_DIR:  ${{ secrets.CLOUDWAYS_APP_DIR }}
      SERVER_ENV: ${{ secrets.SERVER_ENV }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare known_hosts
        run: |
          mkdir -p ~/.ssh
          if [ -n "$SSH_HOST" ]; then ssh-keyscan -H "$SSH_HOST" >> ~/.ssh/known_hosts; fi

      - name: Deploy (key or password)
        shell: bash
        run: |
          set -e
          if [ -z "$SSH_HOST" ] || [ -z "$SSH_USER" ] || [ -z "$APP_DIR" ]; then
            echo "Missing SSH_HOST/SSH_USER/APP_DIR secrets" >&2; exit 1; fi

          if [ -n "$SSH_KEY" ]; then
            echo "Using SSH key auth"
            eval "$(ssh-agent -s)"
            ssh-add - <<< "$SSH_KEY"
            rsync -az --delete -e "ssh -o StrictHostKeyChecking=no" ./ "$SSH_USER@$SSH_HOST:$APP_DIR/"
            # Run deployment script directly on server
            ssh -o StrictHostKeyChecking=no "$SSH_USER@$SSH_HOST" "cd $APP_DIR && chmod +x ci-bootstrap/deploy.sh && ./ci-bootstrap/deploy.sh"
          elif [ -n "$SSH_PASS" ]; then
            echo "Using password auth"
            sudo apt-get update -y && sudo apt-get install -y sshpass rsync
            sshpass -p "$SSH_PASS" rsync -az --delete -e "ssh -o StrictHostKeyChecking=no" ./ "$SSH_USER@$SSH_HOST:$APP_DIR/"
            # Run deployment script directly on server
            sshpass -p "$SSH_PASS" ssh -o StrictHostKeyChecking=no "$SSH_USER@$SSH_HOST" "cd $APP_DIR && chmod +x ci-bootstrap/deploy.sh && ./ci-bootstrap/deploy.sh"
          else
            echo "No SSH credentials provided" >&2; exit 1; fi


